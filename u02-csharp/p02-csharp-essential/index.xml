<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IT in Family</title><link>https://it-in-family.github.io/u02-csharp/p02-csharp-essential/</link><description>Recent content on IT in Family</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://it-in-family.github.io/u02-csharp/p02-csharp-essential/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://it-in-family.github.io/u02-csharp/p02-csharp-essential/questions-for-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://it-in-family.github.io/u02-csharp/p02-csharp-essential/questions-for-interview/</guid><description>Вопросы для собеседования Назовите основные принципы ООП. Что такое наследование, инкапсуляция, абстракция, полиморфизм: приведите примеры (желательно из собственного опыта). От какого класса неявно наследуются все классы в .NET? Разрешено ли множественное наследование в C#? Что такое тип значения, а что такое тип ссылки? Что из этого class, а что struct? В каком участке памяти они хранятся? Чем отличаются value от reference type? String - это reference или value?</description></item><item><title/><link>https://it-in-family.github.io/u02-csharp/p02-csharp-essential/theory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://it-in-family.github.io/u02-csharp/p02-csharp-essential/theory/</guid><description>Теория №1. Введение в ООП, классы и объекты ... Основные материалы Урок №1. Введение в ООП, классы и объекты
Дополнительные материалы Metanit - Классы и объекты Metanit - Конструкторы, инициализаторы и деконструкторы Metanit - Свойства Metanit - Перегрузка методов Microsoft Docs - Introduction to classes Microsoft Docs - Members (C# Programming Guide) Microsoft Docs - Fields (C# Programming Guide) Microsoft Docs - Constructors (C# programming guide) Microsoft Docs - Using Constructors (C# Programming Guide) Microsoft Docs - Instance constructors (C# programming guide) Microsoft Docs - Methods (C# Programming Guide) Microsoft Docs - Properties in C# Microsoft Docs - Properties (C# Programming Guide) Microsoft Docs - Using Properties (C# Programming Guide) Microsoft Docs - How to declare and use read write properties (C# Programming Guide) Microsoft Docs - Auto-Implemented Properties (C# Programming Guide) Microsoft Docs - How to implement a lightweight class with auto-implemented properties (C# Programming Guide) №2.</description></item></channel></rss>