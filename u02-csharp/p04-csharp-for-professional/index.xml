<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IT in Family</title><link>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/</link><description>Recent content on IT in Family</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/practice/tasks-additional/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/practice/tasks-additional/</guid><description>Дополнительные задачи от менторов
Задачи Первая BeverageMachine Необходимо написать консольное приложение, которое рассчитывает стоимость напитка с добавками.
Напитки:
1. Кофе - Id - 1; - Стоимость 15$ 2. Чай - Id - 2; - Стоимость 10$ Добавки:
1. Молоко - Id - 1; - Стоимость 2$ 2. Сахар - Id - 2; - Стоимость 1$ 3. Корица - Id - 3; - Стоимость 3$ 4.</description></item><item><title/><link>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/practice/tasks-codewars-code-practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/practice/tasks-codewars-code-practice/</guid><description>Ссылки на предлагаемый набор задач CodeWars Regular Expression
Parsing and evaluation of mathematical expressions
Alphabetic Anagrams
Regular expression for binary numbers divisible by 5
Create a simple Class at Runtime</description></item><item><title/><link>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/questions-for-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/questions-for-interview/</guid><description>Вопросы для собеседования Что такое сборщик мусора (Garbage Collector) на базовом уровне? Что такое куча и стек? Различия, принцип работы. Как работает сборщик мусора? Чем отличаются value от reference type? String - это reference или value? Зачем нам зарезервированное слово using в C#, если в .NET есть автоматическое управление памятью? Как с этим связан disposable-паттерн и зачем такой сложный паттерн для managed и unmanaged ресурсов? Какие особенности работы с Large Object Heap?</description></item><item><title/><link>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/theory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://it-in-family.github.io/u02-csharp/p04-csharp-for-professional/theory/</guid><description>Теория №1. Пользовательские коллекции ... Основные материалы Урок №1. Пользовательские коллекции Дополнительные материалы Metanit - Обобщенные коллекции Metanit - Список List Metanit - Двухсвязный список LinkedList Metanit - Интерфейсы IEnumerable и IEnumerator Metanit - Итераторы и оператор yield Microsoft Docs - Реализация пользовательских коллекций Microsoft Docs - IEnumerable Интерфейс Microsoft Docs - IEnumerator Интерфейс Microsoft Docs - yield (C# Reference) №2.</description></item></channel></rss>