[{"id":0,"href":"/u00-preface/","title":"U00 Preface","parent":"IT in Family","content":"Starting guide for .NET FAMILY MASTERY     Initial Steps      Создать аккаунт на Github, если у вас его еще нет (Sign Up). Убедитесь, что вы имеете почтовый адрес, который может быть использован для коммуникации с вами. Заполните форму с контактными данными, которые могут быть использованы координаторами для связи с вами и предоставлении доступа ко всем необходимым ресурсам.  Вы будете добавлены в группу в телеграмме Репозиторий будет создан для вас    Основная информация      После прохождения курса по Git нужно будет сделать fork репозитория, который содержит шаблон структуры для заполнения решениями задач. В этот созданный репозиторий вы будете добавлять свои решения задач, согласно структуре. Курс будет проходить на платформе ITVDN (Специальность .NET Developer). Необходимые данные для обучения на платформе будут предоставлены. Для получения практических навыков рекомендуется использовать платформу Codewars. Зарегистрироваться на платформе можно самостоятельно.  Как будет проходить обучение?      Просмотр видео урока на платформе ITVDN. Если после просмотра урока у вас есть вопросы задавайте их координатору/ментору. Изучение дополнительного материала (опционально). К урокам будут предоставлены дополнительные материалы. Прохождения тестирования. Чтобы начать проходить тестирование, нужно нажать на «Тестирование» под названием видео урока. Платформа предоставляет 3 попытки для прохождения. Если вы прошли тестирование успешно или допустили одну ошибку, можете приступать к домашнему заданию. Если вы допустили больше одной ошибки, рекомендуем обратиться к координатору/ментору для закрепления материала. Решение домашнего задания. Домашние задания будут описаны в документе. Чтобы скачать документ нужно нажать на «Домашние задания» под названием видео урока. Для каждого домашнего задания, а также для всех дополнительных задач, создавайте отдельную ветку. После решения задачи, нужно создать PR (Pull Request) для проверки координатором/ментором. Если координатор принимает задачу, то он ставит Approve и делает Merge PR-a. Если не принимает, пишет комментарии к PR-у, которые вы должны исправить. Если координатор/ментор считает, что задача плохо описана, он оставляет за собой права убрать её для выполнения или заменить на свою. Прохождения интерактивного практикума (C# Starter, C# Essential, SQL Essential). Не для всех тем есть практикум. Выполнение дополнительных задач (опционально). Ментор оставляет за собой право выбора дополнительных задач. Это могут быть как задачи из списка, так и свои задачи. Список задач для каждой темы будет предоставлен.  Tooling      Visual Studio 2022 Community Visual Code GitHub Desktop Notepad++  "},{"id":1,"href":"/u01-git/","title":"U01 Git","parent":"IT in Family","content":"Основы работы с Git     Использование системы контроля версий Git сегодня практически является стандартом индустрии. С помощью Git контролировать изменения в файлах проектов могут как разработчики ПО, так и графические, и web-дизайнеры, инженеры-проектировщики, и другие участники процесса создания программного продукта.\nВ данном курсе будут рассмотрены основы использования Git. Вы познакомитесь с тем, как выполнить установку и первичную настройку Git, узнаете, как создавать свой репозиторий. Вы научитесь добавлять файлы в систему контроля версий и отслеживать их изменения.\nОсновной курс по GIT на ITVDN\nДополнительные материалы по всему курсу ...    Видео материалы:\n Git и GitHub Курс Для Новичков Git курс    Дополнительные материалы и документация:\n От установки до основных команд Документация Metanit Работа с GitHub      "},{"id":2,"href":"/u01-git/practice/","title":"Practice","parent":"U01 Git","content":"Практика      Git тренажер  "},{"id":3,"href":"/u01-git/self-control/","title":"Self Control","parent":"U01 Git","content":"Вопросы для собеседования      Объясните разницу между SVN и Git. Что такое Git? В чем разница между GitHub и Git? Каковы преимущества использования системы контроля версий? Расскажите нам о некоторых функциях хостинга репозитория Git Как вы выполняете привязку к Git? Как исправить сломанный коммит? Что означает репозиторий в Git? Как создать репозиторий? Объясните «голый репозиторий» в Git? Что вы подразумеваете под «конфликтом» в git? Что такое git is-tree? Как разрешить конфликт, если он возникает в Git? Если фиксация уже отправлена ​​и опубликована, как вернуть ее обратно в Git? Что такое SubGit? В чем разница между командой git pull и git fetch? Что такое «индекс» или «промежуточная область» в Git? Что такое git stash? Как вы его применяете? Чем git diff отличается от «git status»? Чем git remote отличается от git clone? Опишите стратегии ветвления Объясните рабочий процесс Gitflow? Как определить, объединена ли ветка в мастер? Как удалить файл из git, не удаляя его из файловой системы? Объясните, что такое ребазинг и слияние в Git? Как превратить последние N коммитов в одну?  "},{"id":4,"href":"/u01-git/theory/","title":"Theory","parent":"U01 Git","content":"Теория     Введени ...  Основные материалы      Урок Введение Тестирование знаний  Дополнительные материалы      Git-Book - Введение Видео урок    Создание репозитория ...  Основные материалы      Урок Создание репозитория Тестирование знаний  Дополнительные материалы      Git-Book - Создание репозитория Видео урок Введение    Работа с файлами ...  Основные материалы      Урок Работа с файлами Тестирование знаний  Дополнительные материалы      Git-Book - Работа с файлами Видео урок Git и права на файлы Видео урок Добавление файлов и директорий, git status Видео урок Удаление и переименование файлов    Откат изменений ...  Основные материалы      Урок Откат изменений Тестирование знаний  Дополнительные материалы      Git-Book - Откат изменений    Работа с удаленным репозиторием ...  Основные материалы      Урок Работа с удаленным репозиторием Тестирование знаний  Дополнительные материалы      Git-Book - Работа с удаленным репозиторием    Ветвления и слияния ...  Основные материалы      Урок Ветвления и слияния Тестирование знаний  Дополнительные материалы      Git-Book - Ветвления и слияния Видео урок Ветки – Введение Видео урок Ветки – Создание и переключение Видео урок Ветки – Команда checkout при незакоммиченных изменениях Видео урок Ветки – Восстановление предыдущих версий файлов Видео урок Ветки – Слияние веток “перемоткой” Видео урок Ветки – Удаление веток\"    "},{"id":5,"href":"/u02-csharp/","title":"U02 Csharp","parent":"IT in Family","content":"   Unit Name Videos Length Is Required Details     C# 8.0 Стартовый 28.8 Required    C# базовый (ООП) 31.4 Required    Алгоритмы и структуры данных 10.45 Required (Введение в структуры и алгоритмы данных. Связные списки.; Динамический массив, Stack, Queue и Set.; Алгоритмы сортировки.; Хеш-таблицы. Деревья.)   C# Углубленный 32 Required    C# Универсальные шаблоны 4.8 Required     "},{"id":6,"href":"/u02-csharp/p01-csharp-8-starter/","title":"P01 Csharp 8 Starter","parent":"U02 Csharp","content":"C# 8.0 Стартовый     ITVDN\n"},{"id":7,"href":"/u02-csharp/p01-csharp-8-starter/additional-info/","title":"Additional Info","parent":"P01 Csharp 8 Starter","content":"Дополнительная информация     Первая программа ...  Тезисы      Знаю как создать приложение в VisualStudio  Дополнительные материалы      Metanit - Структура программы    Комментарии ...  Тезисы      Что такое комментарии и для чего они нужны Какие виды комментариев существуют  Дополнительные материалы       Консоль ...  Тезисы      Что-то еще  Дополнительные материалы      Metanit - Консольный ввод и вывод     metanit professor web msdn  "},{"id":8,"href":"/u02-csharp/p01-csharp-8-starter/additional-practice/","title":"Additional Practice","parent":"P01 Csharp 8 Starter","content":"Прохождение практики      Предполагается что, вы отрешали задачи предлагаемые ITVDN в основном курсе и интерактивном практикуме. Дополнительные задачи от менторов добавляются самими менторами, и служат источником задач для дополнительного решения CodeWars - содержит ссылки на задачи, которые было бы не плохо решить, но ограничивать себя только этим списком не стоит. В случае, если задача вам понравилась, просьба добавить ее в список предполагаемых задач,  "},{"id":9,"href":"/u02-csharp/p01-csharp-8-starter/additional-practice/tasks-additional/","title":"Tasks Additional","parent":"Additional Practice","content":"Дополнительные задачи от менторов\n"},{"id":10,"href":"/u02-csharp/p01-csharp-8-starter/additional-practice/tasks-codewars-code-practice/","title":"Tasks Codewars Code Practice","parent":"Additional Practice","content":"Ссылки на предлагаемый набор задач CodeWars     "},{"id":11,"href":"/u02-csharp/p01-csharp-8-starter/questions-for-interview/","title":"Questions for Interview","parent":"P01 Csharp 8 Starter","content":"Interfaces      Назначение интерфейсов Сигнатуры интерфейсов Обобщенные интерфейсы Отличия интерфейса от абстрактного класса Наследование в интерфейсах Interface segregation principle Явная и неявная имплементация интерфейсов классами Имплементация интерфейсов структурами Упаковка и распакова для интерфейсов 9.1 Случаи упаковки по интерфейсной ссылке 9.2 Случаи передачи параметра без без упаковки Часто используемые интерфейсы 10.1. Icomparer 10.2. Idisposible 10.3. Ienumerable 10.4. Iclonable  "},{"id":12,"href":"/u03-databases/","title":"U03 Databases","parent":"IT in Family","content":"Link to video - Root page\n"},{"id":13,"href":"/","title":"IT in Family","parent":"","content":""},{"id":14,"href":"/tags/","title":"Tags","parent":"IT in Family","content":""}]